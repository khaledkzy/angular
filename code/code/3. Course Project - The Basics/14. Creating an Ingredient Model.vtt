WEBVTT

00:02.520 --> 00:05.710
We're going to use ingredients a lot in our application.

00:05.760 --> 00:08.250
So having a model for it makes sense.

00:08.250 --> 00:10.980
Now where do we store this ingredient model.

00:11.130 --> 00:15.180
We store the recipe model in the recipes folder because it belongs there.

00:15.180 --> 00:20.560
Feature wise but where does the ingredient model belong to.

00:21.210 --> 00:27.540
Well I believe it belongs in a new folder the shared folder which I'm going to create in the app folder

00:28.050 --> 00:36.060
share is fitting name for this folder because it will contain features or elements of our app which

00:36.060 --> 00:42.030
are shared across different features like the ingredient which we're going to use bells and a shopping

00:42.030 --> 00:44.580
list and the recipes section.

00:44.580 --> 00:53.530
So here are create a new file and this file will be named ingredient dog model dot TS in there.

00:53.570 --> 01:01.940
I will export a class named ingredient and here we will basically define how Ingredion should look like.

01:01.940 --> 01:09.980
Now how should it look like it should have a name Zool. publicly available which is a string and an

01:09.980 --> 01:10.470
amount.

01:10.470 --> 01:13.850
So how many items of that type should we have.

01:13.970 --> 01:14.660
So maybe.

01:14.660 --> 01:17.880
Amount here which would be of type number.

01:18.350 --> 01:24.950
Now in the constructor and we of course want to be able to receive that as arguments name and amount

01:25.580 --> 01:32.420
and then as a sign that you're asked before so this name E-Class name and this amount equals amount.

01:32.420 --> 01:37.940
Now that is such a typical set up that we receive the arguments you want to assign in the constructor

01:37.940 --> 01:42.630
and that instantly assign them that typescript offers a shortcut.

01:42.890 --> 01:50.120
We can't get rid of the declaration of our properties up here and get rid of the content in the body

01:50.120 --> 01:58.700
of the constructor and simply add an access or in front of the property name here so public in front

01:58.700 --> 02:00.770
of both arguments.

02:00.770 --> 02:06.600
What that will do is behind the scenes it will create the same effect we have put forward.

02:06.620 --> 02:13.700
So it will automatically give us properties with the names we specify here as argument names so name

02:13.700 --> 02:14.230
and amount.

02:14.230 --> 02:21.470
In this case and that will automatically assign the values we receive in the constructor to these newly

02:21.470 --> 02:22.820
created properties.

02:22.940 --> 02:25.090
So nice and convenient shortcut.

02:25.730 --> 02:28.960
With that we defined how Ingredion should look like.

02:28.970 --> 02:31.210
Now we can use a shopping list component.

02:31.340 --> 02:33.770
Let's do this in the next lecture.
