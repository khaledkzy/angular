WEBVTT

00:00:02.720 --> 00:00:07.790
So we saw two examples for director of snow and the better approach definitely is a good approach but

00:00:07.790 --> 00:00:10.150
it's not very interactive right.

00:00:10.160 --> 00:00:13.480
It always gives us a blue background.

00:00:13.760 --> 00:00:15.230
And I want to change this.

00:00:15.230 --> 00:00:21.160
I only want you styled as blue or give as a blue background if I have a over it and if I move my mouse

00:00:21.200 --> 00:00:24.350
away it should go back to transparent.

00:00:24.410 --> 00:00:27.780
So let's improve the bad or highlight here a bit.

00:00:27.860 --> 00:00:33.110
We need to react to some events occurring on the element that directive sits on.

00:00:33.110 --> 00:00:40.870
And a quick and easy way to do this inside of this directive is to simply add a new decorator and does

00:00:40.860 --> 00:00:48.440
this the host listener decorator which needs to be imported from an English court and add it to some

00:00:48.440 --> 00:00:50.030
method we want to execute.

00:00:50.210 --> 00:00:54.350
So the method here could be mouse over.

00:00:54.380 --> 00:01:01.080
Now I've moved this from the top of the file below NZ on and it's your.

00:01:01.160 --> 00:01:07.880
So now this can be triggered whenever some event occurs and that event is specified here as an argument

00:01:08.120 --> 00:01:16.450
as a string host listener here takes the argument name as an input and that would be Mouse enter.

00:01:16.450 --> 00:01:22.720
Let's say that is one of the events supported by the DOM Elements.

00:01:22.720 --> 00:01:24.130
This directive sits on.

00:01:24.140 --> 00:01:29.370
So you have basically all events available you could also use event binding before.

00:01:29.420 --> 00:01:32.860
So that's my host Lisner targeting this event.

00:01:33.050 --> 00:01:35.690
And because all the received event data.

00:01:35.960 --> 00:01:39.920
So Event Data of type event would be passed to us here.

00:01:39.950 --> 00:01:41.090
So that works.

00:01:41.090 --> 00:01:44.120
You can also listen to custom events here and retrieve that data.

00:01:44.120 --> 00:01:50.090
So that's just like the method you execute when you add a click listener or whatever your event is and

00:01:50.090 --> 00:01:53.420
then pastie method between quotation marks.

00:01:53.420 --> 00:01:54.980
So that's happening here.

00:01:55.010 --> 00:01:59.560
Most listeners just a convenient way of listening to events on that element.

00:01:59.960 --> 00:02:05.480
So with that we listen to the mouse entry when we get the event data which I don't need here.

00:02:05.660 --> 00:02:12.190
But what I want to do in this case is I want to change the background color of the element.

00:02:12.320 --> 00:02:19.640
So what I can do is I can copy this code from you on in it and commented out and now set the style here

00:02:19.730 --> 00:02:21.020
on mouse enter.

00:02:21.200 --> 00:02:30.500
And now I can quickly copy this and add another method which I'll name Maoz leave maybe wherever I will

00:02:30.500 --> 00:02:35.460
listen to the mouse leave event and never officially vent I can list to listen to.

00:02:35.750 --> 00:02:40.460
And then I want to set the background color to transparent maybe.

00:02:40.760 --> 00:02:44.570
Now with this emplace we should have a reactive directive.

00:02:44.900 --> 00:02:49.110
So now no background color never hover over it.

00:02:49.190 --> 00:02:50.170
It gets blue.

00:02:50.390 --> 00:02:57.600
So dad is working as intended now with host Lisner reacting to user Ribet or to any events