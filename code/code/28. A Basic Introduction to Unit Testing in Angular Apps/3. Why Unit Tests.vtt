WEBVTT

00:00:01.350 --> 00:00:03.680
你為什麼會要正確對待單元測試。

00:00:03.750 --> 00:00:05.360
讓我們來看看這個應用程序。

00:00:05.370 --> 00:00:06.710
我們得到了一個用戶組件。

00:00:06.810 --> 00:00:10.820
我們得到了用戶的細節組件反向管道和用戶服務。

00:00:11.200 --> 00:00:17.180
用戶組件也使用了一些輸入結合這裡或一些屬性綁定到用戶的細節的組件。

00:00:17.460 --> 00:00:27.900
我們可以問幾個問題，或者同一個問題實際上塵土飛揚的組件工作的目的是管道和服務，這是我們想要的單元測試來回答。

00:00:27.900 --> 00:00:29.690
我們可能還需要回答的問題。

00:00:29.760 --> 00:00:31.820
是否輸入工作按預期。

00:00:32.010 --> 00:00:34.860
或有灰塵在檢查你的工作按預期。

00:00:34.860 --> 00:00:45.680
這些都是我們希望與單元測試，並與你和測試，我們希望得到我們所有的測試告訴我們，我們的應用程序是否按預期運行一個真正的響應覆蓋問題。

00:00:45.690 --> 00:00:53.110
當然，你已經可以想像，正確輸入所需的任務就是為了得到正確的答案的重要組成部分。

00:00:53.250 --> 00:01:05.400
而這件事情我不會，因為我不能寫正確的測試，這裡教你再次東西福特的老COORDS甚至沒有英語具體課程課程聚焦於測試。

00:01:05.400 --> 00:01:07.340
這不是什麼我想在這裡做的目標。

00:01:07.440 --> 00:01:16.990
我想告訴你如何使用測試用英語應用不哲理有關測試應該如何工作或測試，應該怎麼寫。

00:01:17.040 --> 00:01:19.780
因此，與回答我們的問題。

00:01:19.830 --> 00:01:37.880
很酷的事情作為單元測試讓我們防範重大更改，因為我們可以在升級，我們重新運行我們的所有測試的在線申請說，我們看到現在測試，如果我們知道他們的工作之前，我們知道我們的應用程序現在由於打破哪些地方失敗到更新。

00:01:37.890 --> 00:01:46.010
我們也可以分析我們當前的行為，同時檢測預期和意外的結果，我們可以發現設計錯誤。

00:01:46.080 --> 00:01:57.290
寫我們的測試也許當我們遇到一些問題寫它，因為我們發現在我們的一般設計有誤，或者我們發現了什麼的運行，以測試你意外的響應。

00:01:57.450 --> 00:01:59.070
因此，這是測試可以幫助我們。
