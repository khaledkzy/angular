WEBVTT

00:00:01.980 --> 00:00:10.740
我們確實有使用這種在這裡設立審查那種倒霉的同步反正只有理論上是異步的替代品。

00:00:10.740 --> 00:00:13.650
你是否注意到，我們沒有等待一個半秒在這裡。

00:00:13.710 --> 00:00:23.050
我們也可以在這裡複製此測試將它複製下來，並呼籲假異步或使用假異步的包裝。

00:00:23.160 --> 00:00:25.860
這需要從入口到測試包導入。

00:00:25.860 --> 00:00:26.210
是。

00:00:26.210 --> 00:00:35.480
那麼這是什麼讓我做的是它可以讓我擺脫這裡是這樣的，當穩定的功能。

00:00:36.120 --> 00:00:39.510
所以不是我執行預期等瞬間。

00:00:39.720 --> 00:00:56.310
但是，我叫之間在滴答滴答現在都需要從英國龐大的測試包進口和技術基本上是指在一個假的異步環境中完成所有的異步任務。

00:00:56.310 --> 00:01:03.500
現在執行TICH當異步任務完成後，馬上就可以完成它們，因為我們馬上解決。

00:01:03.510 --> 00:01:05.130
我們不要等待一個半秒。

00:01:05.130 --> 00:01:08.060
這就是為什麼我們這樣，我們不想等到寫的。

00:01:08.070 --> 00:01:09.790
這是一次測試時。

00:01:10.110 --> 00:01:13.560
所以我們立即完成它，我們應該有訪問數據。

00:01:13.560 --> 00:01:18.590
因此，讓我們看看這個作品，如果我救了這確實是我們獲得成功的試驗也在這裡。

00:01:18.750 --> 00:01:21.970
這是怎樣，我們現在還使用假異步。

00:01:22.140 --> 00:01:31.510
所以，你可以使用任何異步與此設立時穩定，然後在回調您的期望或假的異步它需要同時進行。

00:01:31.530 --> 00:01:42.670
這只是一個不同的理念，在這裡，你更喜歡假的或行為就像是真的異步，在這裡你只需要使用剔說好，讓我們繼續。

00:01:43.080 --> 00:01:45.900
這是你如何使用服務和組件。

00:01:45.900 --> 00:01:57.490
我挑了這個任務，或這兩個建築作品，因為他們是非常重要的，他們可能是當中特別是與注入和異步任務中最複雜的。

00:01:57.510 --> 00:01:59.260
我希望這是有益的。

00:01:59.280 --> 00:02:03.440
我再這樣做有一個文件，你可以潛水了很多深入地了解。

00:02:03.690 --> 00:02:10.190
我想通過在看看隔離和非隔離的測試用例完成這個模塊。

00:02:10.290 --> 00:02:13.360
讓我們來看看這個，了解這是什麼。
