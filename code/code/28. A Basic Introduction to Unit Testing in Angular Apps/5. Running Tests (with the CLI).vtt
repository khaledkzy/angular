WEBVTT

00:00:01.890 --> 00:00:06.150
現在好了，我們才明白這些測試是如何一般寫。

00:00:06.150 --> 00:00:10.550
讓我們來看看他們在行動在終端運行能量的任務。

00:00:10.560 --> 00:00:18.570
這裡面的項目文件夾來運行我們的測試果味Seelye這又已經有這個測試運行器等內置的。

00:00:18.570 --> 00:00:27.540
現在，這是什麼會做是將啟動測試環境，我們可以忽略這些警告。

00:00:27.540 --> 00:00:29.180
它啟動Carmer。

00:00:29.310 --> 00:00:35.990
在這裡，我們看到，它執行三個三個測試成功，因為我們這裡有三個測試。

00:00:36.000 --> 00:00:39.150
現在，讓我們改變一些東西，看看測試失敗。

00:00:39.270 --> 00:00:45.460
如果我們去到應用程序組件並更改應用到工程應用的工作原理沒有第二件。

00:00:45.470 --> 00:00:54.620
因此，與一個p那麼D測試只是我們檢查它包含應用程序的工作原理，以及該測試在這裡應該失敗。

00:00:54.660 --> 00:01:08.250
因此，如果我們保存，這是這裡自動重新運行，現在我們看到了兩個失敗的測試，現在我們根本就在這裡檢查我們的日誌，它可能是一個有點難以閱讀。

00:01:08.250 --> 00:01:11.920
但基本上這裡是看預期Apteryx等於貼花。

00:01:11.930 --> 00:01:19.980
因此，這是一個問題，當它失敗，同樣的A級明星真正那裡，因為我們缺少這兩個時間，我們沒有測試。

00:01:20.010 --> 00:01:24.780
應用程序的工作原理在這裡，我們預計包含Eberts有兩個模板。

00:01:24.790 --> 00:01:26.500
但現在只有一個。

00:01:26.880 --> 00:01:31.960
所以這就是我們接下來會解釋這些測試結果，並找出發生了什麼事情。

00:01:32.100 --> 00:01:40.640
而我又要解決這個問題，以保存並自動重新運行測試只需花費幾秒鐘的時間，現在我們看到他們都成功的一次。

00:01:40.650 --> 00:01:47.600
所以，這就是我們進行的測試，讓我們跑，我們怎能看到失敗和成功的測試。

00:01:47.610 --> 00:01:53.850
現在與跑步，我可以添加一些新的東西，這個應用程序了。

00:01:53.910 --> 00:01:58.280
好吧，漢斯一點點，更深入地測試。
