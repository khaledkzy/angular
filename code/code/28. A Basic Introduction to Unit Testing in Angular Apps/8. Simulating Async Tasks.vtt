WEBVTT

00:00:01.430 --> 00:00:16.800
隨著我們得到的基本介紹和測試組件和服務，以及我們中注入服務組件，但我們還沒有真正談過這個事情異步這裡，我們的服務迄今為止是同步的。

00:00:16.800 --> 00:00:22.400
所以沒有異步任務一樣深入到一個Web服務器時，你可能有。

00:00:22.770 --> 00:00:33.020
因此，在共享文件夾中創建一個新的服務，數據服務，這項服務將現在實際上暴露要測試異步函數。

00:00:33.390 --> 00:00:43.830
因此，在hirable還出口確實類數據業務，它應該有一個獲取詳細方法。

00:00:44.160 --> 00:01:11.550
現在得到的信息將有一個承諾，每個結果的承諾是一個新的承諾，我知道你不會喜歡無極年或所有它會被讀取，但它會在哪裡工作，我們通過決心和拒絕作為參數傳遞給我們'的代碼再傳遞到承諾的構造和我們基本上有一個時間出來，這將屆滿後，讓我們說讓我們把它一個半第二。

00:01:11.850 --> 00:01:20.900
在這裡，我想等我傳回一個串保持數據執行一系列的課程功能，我只是解決數據。

00:01:21.300 --> 00:01:25.830
而這一概念之外的只是答應我會簡單地返回這個承諾。

00:01:25.830 --> 00:01:31.110
因此，獲得詳細信息返回一個承諾，一個半秒鐘後這一承諾將解決。

00:01:31.110 --> 00:01:36.330
現在我想回到睾丸在用戶組件這是我想用它。

00:01:36.480 --> 00:01:50.420
我先在這裡提供的數據服務，我將在這裡設置到數據的數據屬性，當然這是一個字符串，一個注入的構造函數。

00:01:50.420 --> 00:02:03.150
因此，我將有很好的數據服務器，並檢查眼淚注入我能夠這樣做，並牢記我們總是可以通過訪問如噴油器我們以前沒有得到的實例。

00:02:03.510 --> 00:02:07.010
那麼回到這些規範下降這裡寫一些測試。

00:02:07.110 --> 00:02:11.250
到目前為止，我們已經用我們的用戶服務，這是同步測試。

00:02:11.340 --> 00:02:15.320
沒有一個異步獲取我的數據。

00:02:15.390 --> 00:02:22.600
因此，首先讓我們做一個正常的測試，看看這是否正常工作，但它可能不會工作，因為我將它命名。

00:02:22.620 --> 00:02:31.990
如果不是異步調用它不應該是成功種植樹木。

00:02:31.990 --> 00:02:48.540
這是不是一個真正的偉大的任務，因為這裡正在測試的測試包的功能，而不是我的應用程序，但我想說明建立測試和使用這裡的異步功能，這將在第二次使用這種方式的區別。

00:02:48.540 --> 00:02:52.890
所以現在我們總是傳遞函數為這裡的第二個參數。

00:02:53.190 --> 00:03:08.040
而這個袋子裡面我會再執行我的標準代碼可以訪問我的應用程序在這裡，現在我需要以某種方式訪問並獲得其異步進行的詳細方法。

00:03:08.040 --> 00:03:17.670
事情是我不一定要執行真正的獲取詳細信息的方法，因為這種方法可能在實際應用中接觸到的服務器。

00:03:17.670 --> 00:03:18.090
你不知道。

00:03:18.090 --> 00:03:21.120
當我測試的時候接觸到服務器的所有的時間。

00:03:21.120 --> 00:03:23.100
相反，你有種想捏造事實。

00:03:23.100 --> 00:03:24.840
你想覆蓋它。

00:03:24.840 --> 00:03:38.410
你想創建你的假執行仍是異步的，但確實別的東西或做它至少不伸手，只是提供一些虛擬數據真正的服務也會給您回复。

00:03:38.890 --> 00:03:45.600
所以，因此，我將創造一個新的世界Spight，我會用狙上。

00:03:45.630 --> 00:03:51.870
這是由測試環境設置不可謂不特定的測試功能的其他功能。

00:03:51.980 --> 00:03:55.780
在這裡，我們的朋友告訴你想要什麼間諜。

00:03:56.010 --> 00:04:06.190
嗯，我想窺探的是數據服務，我可以接觸到像我一樣在這裡為用戶服務，通過使用該技術注射器。

00:04:06.240 --> 00:04:07.670
因此，讓我們在這裡添加它。

00:04:07.710 --> 00:04:16.370
但是，現在當然我們稱之為數據服務，並獲得數據服務導入為訪問數據服務了。

00:04:17.100 --> 00:04:28.620
然後我們用這個數據服務窺視獲取信息的方法有你把它作為一個字符串，但在這裡，這個名字必須匹配您想刺探的方法名。

00:04:29.220 --> 00:04:38.600
那麼這個設置什麼，我現在能做的就是我可以改變的東西有和，然後說返回值。

00:04:38.820 --> 00:04:46.800
因此，我們窺探，這意味著當粵豐獲得細節得到執行得到執行，我們得到線人。

00:04:46.800 --> 00:04:54.240
所以這是我們聽的是什麼意思間諜，並每當它運行測試時被執行，我們將不執行它。

00:04:54.240 --> 00:04:58.970
相反，我們將回到我們自己的值。

00:04:59.010 --> 00:05:00.620
現在去價值，我們會回來。

00:05:00.620 --> 00:05:03.210
這是勃拉姆斯的決心。

00:05:03.390 --> 00:05:04.310
德達。

00:05:04.380 --> 00:05:21.010
現在，這是什麼做幕後是它將執行代碼的異步代碼，但它最終會還給我們我們自己的數據，而不是什麼異步任務便給了我們。

00:05:21.570 --> 00:05:24.850
它仍然會以異步方式運行，但。

00:05:25.260 --> 00:05:27.500
因此，我可以在這裡做是我，間諜就可以了。

00:05:27.500 --> 00:05:28.660
我得到這個數據。

00:05:28.830 --> 00:05:33.750
我現在可以運行變化檢測來更新我的，而組成部分。

00:05:33.750 --> 00:05:38.400
我得到這個狀態經過這裡，然後我要檢查，如果這個工作。

00:05:38.400 --> 00:05:50.090
所以我會說希望，我希望是未定義我的應用程序數據字段。

00:05:50.130 --> 00:06:02.330
通常我會想到它是別的東西，因為在我的用戶組件在這裡有引擎現在我會用我的數據服務，以獲得詳細信息。

00:06:02.610 --> 00:06:07.410
然後這是在這裡，然後用最新的，我回去的承諾。

00:06:07.410 --> 00:06:10.790
誰說過這個數據等於我回去的日期。

00:06:10.830 --> 00:06:20.580
這就是我通常會想到發生這樣一旦答應解決了一個承諾通過我白天儲存在國有資產在這裡的測試。

00:06:20.580 --> 00:06:37.080
我是說，我希望它是不確定的，所以我才想到的原因是因為我知道，這將那種失敗，我會回來這在第二和這樣做，​​雖然我們應該在這裡設置數據之前字符串類型，以避免編譯錯誤。

00:06:37.090 --> 00:06:47.700
所以，如果一個小時的測試是我們得到的成功，這意味著它不給我們ð通常希望解決我們通常希望得到的結果將是獲取數據的權利。

00:06:47.700 --> 00:06:51.620
如果我現在寫這篇文章，你會看到它失敗。

00:06:51.630 --> 00:06:54.230
其原因是它確實是不確定的。

00:06:54.240 --> 00:07:01.220
所以，我只是寫一般情況下在這裡有一個成功的測試，但不確定是不是真的是我們所期望的運行。

00:07:01.230 --> 00:07:09.240
我們預計數據在一開始是不確定的，但是作為數據就是我們回到這裡。

00:07:09.240 --> 00:07:13.470
的名稱，或在結束內容數據的字符串。

00:07:13.470 --> 00:07:20.540
我們那麼，怎樣才能測試這樣的異步任務在運行過程中的階段的變化。

00:07:20.550 --> 00:07:22.880
讓我們寫這第二次測試。

00:07:22.890 --> 00:07:32.420
我將在這裡複製的第一個，但這裡我預想的那麼它應該如果異步調用成功獲取數據。

00:07:32.940 --> 00:07:36.140
在這裡，我通常會使用相同的代碼。

00:07:36.150 --> 00:07:41.330
它會調整它，但它會在這裡使用的異步功能。

00:07:41.550 --> 00:07:52.820
我們從測試包裝法導入該功能打包測試包，我會換我的回調與這裡的功能。

00:07:52.830 --> 00:08:00.430
現在這樣做是它的角2創造了一種異步任務環境中，如果假貨吧。

00:08:00.570 --> 00:08:17.790
這不是真的，但是異步它可以讓我們那裡，然後那也是知道異步運行的任務，有異步任務，並能夠處理它們，就好像它會在他們確實也是異步真正的應用程序上下文處理它們。

00:08:17.790 --> 00:08:21.080
要做到這一點，我需要補充，雖然一件事。

00:08:21.210 --> 00:08:26.660
檢測更改後我需要用我的夾具和執行時穩定。

00:08:26.790 --> 00:08:34.800
在燈具這個功能讓我可以反應到所有異步任務完成。

00:08:34.920 --> 00:08:47.450
所以我在這裡就可以執行我的諾言當時的功能，以及採用了回調的完成後執行，但這個回調裡面，我會想到某事發生。

00:08:47.460 --> 00:08:53.400
所以一旦異步任務已經完成，在那裡我希望它是數據。

00:08:53.550 --> 00:09:03.440
而且現在可嵌套在那裡，我現在可以保存這個，現在我們得到9成功的測試，因為現在我們在等待異步任務完成。

00:09:03.450 --> 00:09:07.020
這不是真的發生了異步我們在這裡作假。

00:09:07.020 --> 00:09:18.450
還記得我們返回自己的價值，但與異步包裝回調我們告訴過哎即使承諾立即解決我們確實有某種異步任務的。

00:09:18.440 --> 00:09:20.410
它仍然是一個承諾。

00:09:20.430 --> 00:09:24.990
包裝一些值，而不是解決或不脫價值本身。

00:09:25.170 --> 00:09:31.350
因此，與異步我們現在可以在這裡當呼叫穩定，等待我們的環境穩定。

00:09:31.350 --> 00:09:40.520
對於所有異步任務來完成，並因此成功地訪問數據，以一定狀態時，它會在一個真實的環境。
