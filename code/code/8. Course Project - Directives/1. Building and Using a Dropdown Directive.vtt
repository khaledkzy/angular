WEBVTT

00:02.470 --> 00:04.190
Well I come back to the recipe book.

00:04.340 --> 00:08.960
We already use NGF and Engy for intersections that we're already using directives.

00:09.320 --> 00:16.730
But now I want to enhance this project by adding our own directive which allows us to open the drop

00:16.730 --> 00:20.070
downs which don't work as of now if you collect them.

00:20.300 --> 00:25.550
They don't work because we didn't implored bootstraps Chalis script code and I don't want to import

00:25.610 --> 00:29.930
this because English should be the only thing interacting with my dorm.

00:30.110 --> 00:36.660
But now with the direct of knowledge we can create our own directive which will manipulate these buttons.

00:37.460 --> 00:46.710
I'll add the directive in the shared folder and I will name it dropdown directive.

00:46.730 --> 00:49.980
So the file is named dropdown directive dot ts.

00:50.350 --> 00:56.620
Of course you could use the seal I created and you could even point to the shared folder in the command

00:56.650 --> 01:00.950
to automatically generated in this shared folder.

01:01.000 --> 01:02.080
I'll do it manually though.

01:02.080 --> 01:08.810
Always a good practice and your name should be down directive like this.

01:09.040 --> 01:14.600
And of course we need to add a decorator to turn this into a directive.

01:14.890 --> 01:21.270
So it's the app directive decorator which needs to be imported from an angle or core.

01:21.640 --> 01:25.870
And here there is one thing I need to set up on the selector.

01:25.960 --> 01:31.130
I want to define how I can add my directive and I will use an attribute selector.

01:31.150 --> 01:39.160
Therefore all enclose the name in square brackets the name now will be app dropdown to have a unique

01:39.160 --> 01:45.040
name which doesn't accidentally interfere with an officially existing attribute name or anything like

01:45.040 --> 01:46.420
that.

01:46.420 --> 01:48.720
Now what should this directive do.

01:48.970 --> 01:56.080
I want to add some functionality to it which allows us to add a certain CEOs as class to the element.

01:56.110 --> 01:58.530
Sits on ones that just clicked.

01:58.570 --> 02:03.050
So once this element the directive sits on it's clicked and removes the class.

02:03.070 --> 02:05.360
Once we click again let's say.

02:05.890 --> 02:07.510
So this is your challenge.

02:07.510 --> 02:13.750
Try implementing such a method which basically listens to clicks and then toggle some property which

02:13.750 --> 02:19.630
determines whether some classes attaches or not and also try implementing some code which dynamically

02:19.690 --> 02:23.550
attaches a C S S class or not before you actually start.

02:23.670 --> 02:26.690
Let's find out which class we need to attach.

02:26.890 --> 02:34.060
If you go to the recipe detailer component here if you attach the open seats S-Class to the def which

02:34.060 --> 02:40.430
holds a button group and you go to your application and select the recipe you see now it looks like

02:40.430 --> 02:42.500
the dropdown was opened.

02:42.560 --> 02:46.500
So it does open CSSA class the same for to use such and a header.

02:46.520 --> 02:47.630
We need to attach.

02:47.840 --> 02:49.280
So that's your challenge.

02:49.280 --> 02:50.600
Boulder dropped on the rack there.

02:50.630 --> 02:52.160
Which attaches this class.

02:52.250 --> 02:54.240
Whenever we click on it or it removes it.

02:54.260 --> 03:00.690
When we click a second time let's bolt this directive together now.

03:01.010 --> 03:05.790
So as explained I want to toggle it up on clicking this.

03:06.170 --> 03:09.530
So you listen to a click I should add.

03:09.560 --> 03:14.270
Host listener and which has to be imported from angular core.

03:14.510 --> 03:22.130
And I want to listen to a click event then a one to execute toggle open which looks like or sounds like

03:22.130 --> 03:24.560
a fitting name because that is what I want to do.

03:24.680 --> 03:27.680
I want to toggle whether this should be opened or not.

03:29.050 --> 03:37.500
Well then I will add is open directive which all set to falls initially and then my host listener or

03:37.510 --> 03:40.460
simply set open or is open to.

03:40.510 --> 03:44.560
Well what it is currently not so is open was true.

03:44.560 --> 03:46.060
It will now be set to false.

03:46.090 --> 03:48.520
Any other way around.

03:48.540 --> 03:58.500
So with that I'm toggling that property now to dynamically at Hatch or detach a SEUS S-Class depending

03:58.500 --> 03:59.640
on this.

03:59.760 --> 04:07.110
All I have to do is I'll add host binding which needs to be imported from Anglo core and allows us to

04:07.110 --> 04:09.890
bind to properties of the element.

04:09.900 --> 04:13.500
The directive is placed on end here.

04:13.620 --> 04:22.260
I want to bind to the class property off that component of that element class simply is an array of

04:22.320 --> 04:27.340
all the classes and your It's all about this open class.

04:27.780 --> 04:32.110
As you learn that C as class we need to attach dynamically or detach.

04:32.280 --> 04:37.330
And now the rest will be handled by angler since a bind 2 is open.

04:37.530 --> 04:41.980
This will not be attached initially when ever is open switches to true.

04:42.000 --> 04:46.060
It will be attached and whenever it switches to files it will be removed.

04:46.140 --> 04:48.500
And that's our entire directive.

04:49.140 --> 04:57.020
Now to be able to use it I need to go to Marchal and add it here at the drop down directive and add

04:57.040 --> 05:06.180
the implored pointing to the shared folder and with that imported now I can use it I can use it in the

05:06.180 --> 05:08.530
detail component here.

05:08.550 --> 05:13.470
I have to use it on the div or on the element where open should be attached to in the end.

05:13.470 --> 05:19.360
So in this case the deal with the Button class and here I'll add my own app dropdown directive.

05:19.530 --> 05:25.200
Without square brackets without assigning any value because while I don't need to configure anything

05:25.200 --> 05:32.100
on this directive and now in the header here the place where I need to added is just a list item with

05:32.100 --> 05:39.000
the class of dropdown here does this what will actually need the open class to show something with that

05:39.000 --> 05:41.110
in place and and she's still running.

05:41.250 --> 05:45.830
Let's save this and viewless in our application see if this works the way it should.

05:46.080 --> 05:48.280
Let's test it in the header.

05:48.300 --> 05:49.610
Looks pretty good.

05:49.650 --> 05:54.620
We close it by clicking again and you're on our recipe.

05:54.660 --> 05:56.480
That looks awesome too.

05:56.790 --> 05:59.650
So that's working exactly the way I wanted to work.

05:59.940 --> 06:03.570
And with that in place that already has everything I wanted to build.

06:03.570 --> 06:07.170
So a relatively short recipe book section here.

06:07.260 --> 06:14.490
Now we can move on to services a very powerful tool and then we will add services in this app here to

06:14.490 --> 06:21.390
greatly enhance it and fix some things which we had to do kind of complicated thus far.

06:21.390 --> 06:23.370
We'll also add some new features
