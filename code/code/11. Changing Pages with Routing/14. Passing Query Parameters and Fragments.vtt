WEBVTT

00:02.530 --> 00:05.940
In the last lecture we learn how we can retrieve our route parents.

00:06.100 --> 00:10.720
That's awesome and this is a super important something you will probably use a lot.

00:10.720 --> 00:14.020
Now there are more things you can add to your your elbow.

00:14.590 --> 00:17.090
You might have wari parameters.

00:17.140 --> 00:24.510
These are parameters separated by a question mark like mode equals editing anything.

00:24.520 --> 00:27.790
And you can have multiple ones separated with signs.

00:27.790 --> 00:32.130
The question now is how can you pass them using angler links.

00:32.170 --> 00:33.100
Rattlings.

00:33.160 --> 00:35.000
And how can you then retrieve them.

00:35.290 --> 00:37.060
You might also have a hash fragment.

00:37.090 --> 00:45.220
So spread with the hash sign to jump to a specific place in your app loading for example or maybe you

00:45.220 --> 00:47.390
don't really want to use destruccion there.

00:47.430 --> 00:51.430
You would have to add this scroll down their behavior on your own.

00:51.430 --> 00:56.340
Maybe you just want to retrieve it to use it as some extra information.

00:56.410 --> 01:02.950
Let's take a closer look at how we can pasters extra information on our links both when using the router

01:02.950 --> 01:08.960
linked directive and the navigate method in code and how we can then retrieve that information.

01:09.070 --> 01:16.210
Lets start by passing it first let's say an hour at Marchal we want to add more routes for our service

01:16.210 --> 01:17.280
here.

01:17.290 --> 01:24.730
We also want to add one other route and that would be the route which allows us to edit a certain server

01:24.760 --> 01:31.030
so we might load a server with some ID and then have Slash added at the end to describe NDU or else

01:31.060 --> 01:32.760
what will happen in this component.

01:32.800 --> 01:40.890
And here it would be the added server component we want to load so we added this new route which should

01:40.890 --> 01:45.010
load disk component and edit server file.

01:45.110 --> 01:52.750
Now to be able to load this route on my service component here I want to hook up these links here in

01:52.750 --> 01:53.600
this list.

01:53.660 --> 01:56.360
We have to do the same for the users component later.

01:56.710 --> 02:03.580
So here I will add my router link and I will use the square brackets brackets index again so that I

02:03.580 --> 02:07.640
can pass an array here because I want to go to slash services.

02:07.960 --> 02:10.290
Then lets say with 35.

02:10.380 --> 02:12.880
We will soon learn how to make this more dynamic.

02:13.360 --> 02:20.620
And then also add it so it is just newly created route.

02:20.640 --> 02:22.730
Want to call in this case.

02:23.040 --> 02:30.780
If we save this and we go to servers and click on this you'll see we loaded service five edit and the

02:30.780 --> 02:32.270
same for every link of course.

02:32.280 --> 02:34.680
Again I will change to soon.

02:34.680 --> 02:40.460
Now let's say we also want to have some query parameter deciding on whether we are allowed to edit the

02:40.470 --> 02:42.680
server or not.

02:42.690 --> 02:49.180
So we want to add this question mark and we don't do it by adding questionmark equals something here

02:49.240 --> 02:57.000
as an element and desirÃ©e instead when using a link in the template we add a new property of this Roger

02:57.000 --> 02:57.930
link directive.

02:58.150 --> 03:02.430
We can bind to the Querrey parents property.

03:02.440 --> 03:05.180
Now clearly parents and that's what this not in New directive.

03:05.200 --> 03:09.840
It's just another bind the property of the router linked directive.

03:09.840 --> 03:17.470
And here we have to pass a javascript object and on query peron's we can now define key value pairs

03:17.620 --> 03:19.990
all the parameters we want to add it.

03:19.990 --> 03:26.720
So for example say allow added here and set this to one.

03:26.740 --> 03:33.100
Now let's see what happens if we now click this link we now click any link here you'll see we have questionmark

03:33.160 --> 03:34.770
allow added 1 year.

03:34.810 --> 03:36.620
So that's the key value pair.

03:36.790 --> 03:41.530
We set up in this object and of course you could have more key value pairs your Which would then be

03:41.530 --> 03:44.030
separated with the end sign in between.

03:44.110 --> 03:45.020
In your link.

03:45.070 --> 03:47.950
So that's the query Prim's property.

03:47.980 --> 03:54.250
We also have the fragment property and that is only fragment because you Mowatt may only have one fragment

03:54.630 --> 03:55.270
here.

03:55.390 --> 04:02.050
You could simply pass a string with single quotation marks or therefore omit the square brackets and

04:02.050 --> 04:04.600
set this to let's say loading.

04:04.930 --> 04:09.000
So if we now save this we go back to the service page.

04:09.010 --> 04:11.260
Now you see we have hash loading at the end.

04:11.270 --> 04:12.940
This is how you can add a fragment.

04:12.940 --> 04:18.080
So super easy to add in our router link here in our template.

04:18.190 --> 04:21.570
Let's now see how we can do the same programmatically.

04:21.760 --> 04:25.710
So our home component where we already have to load service button.

04:25.870 --> 04:28.680
Let's say we want to load server 1.

04:29.050 --> 04:35.360
So hirable changed its name to load server and pass one as an argument maybe at just this method here.

04:35.500 --> 04:39.570
Load server and the idea will be passed as an argument as we just saw.

04:39.820 --> 04:44.020
And you are there for one to navigate to servers pastie ID.

04:44.080 --> 04:46.120
We're already seeing how this gets more dynamic.

04:46.120 --> 04:50.730
No we're not hard coding 5 or something like this we're using this argument here instead.

04:51.040 --> 04:53.180
And then as a last argument edit.

04:53.180 --> 04:57.160
Now again we still want to add Kriti Prim's and this fragment.

04:57.220 --> 05:04.080
So here in the navigate method we used as objects we already saw where we already added relative to.

05:04.090 --> 05:06.070
Now I don't need relative to here.

05:06.250 --> 05:12.940
Instead here I can also set up my query parents and that Afghanistan just a javascript object where

05:12.940 --> 05:20.820
we say allow added and set this to one maybe and just as I add a query perhaps I can also add that fragment

05:20.820 --> 05:23.820
here and set this to loading.

05:23.820 --> 05:29.650
Now if this if we save this and we go back to our home page and click load server you'll see we add

05:29.650 --> 05:36.110
the query parameter allow added and set it equal to one and the hash fragment here.

05:36.300 --> 05:42.410
So that is how we can use Crais parameters and fragments on both the programmatic and routing approach

05:42.420 --> 05:47.490
calling it from the types of code or on the route to link like here.

05:47.490 --> 05:50.130
Now let's also learn how we can retrieve that data.

05:50.130 --> 05:50.820
Thereafter
