WEBVTT

00:02.710 --> 00:09.870
In the last lecture we configured our forum here we added some controlled by placing Engy model on the

00:09.870 --> 00:10.870
inputs.

00:11.160 --> 00:17.900
Now let's make this form submittal so that we can actually see what the user entered.

00:17.910 --> 00:21.780
For this I'll go to my app component.

00:21.780 --> 00:24.480
I already do have a method here which you will use later.

00:24.480 --> 00:31.680
Let's ignore it for now and I'll add a new method on submit maybe this ship is triggered whenever this

00:31.680 --> 00:36.050
form is submitted by the user in on submit.

00:36.060 --> 00:38.810
I want to output whatever the user entered.

00:39.180 --> 00:41.430
Well first of all we need to call this method.

00:41.430 --> 00:45.750
So back in the template how can we call on submit.

00:45.750 --> 00:51.840
Now you might think that a good place would be on a click on this button here at the bottom right because

00:51.840 --> 00:54.570
it is just a button we click when we want to submit the form.

00:54.750 --> 00:58.560
However this is not the best place to do it.

00:58.560 --> 01:01.440
Keep in mind that this part of type submit.

01:01.440 --> 01:08.070
So if we click it as it is placed inside of our HMO form element something else will happen.

01:08.100 --> 01:13.690
The default behavior of HVM L will be triggered to use to call it like this.

01:13.830 --> 01:21.340
If you have a button in a form element this button will submit the form will send the request normally.

01:21.360 --> 01:25.420
But besides that it will also trigger a javascript event.

01:25.520 --> 01:29.730
Do you submit event that's built into javascript built into him.

01:29.740 --> 01:35.200
All you could say angular takes advantage of this and gives us a directive.

01:35.310 --> 01:39.080
We can place on this form element as a whole.

01:39.180 --> 01:45.240
It is called Engy submit and it actually only gives us one event we can listen to.

01:45.240 --> 01:47.860
So let's wrap it in parentheses.

01:47.880 --> 01:55.170
This event made it will by the end submit directive will be fired when ever this form is submitted.

01:55.170 --> 01:58.470
So what ever does default behavior is triggered.

01:58.480 --> 02:05.400
And here we can call on submit like this and to show you that this works.

02:05.400 --> 02:09.730
I will simply go into and submit and log submitted here.

02:09.900 --> 02:11.480
Just like that.

02:11.520 --> 02:18.950
Now if we save this and let it recompile Let's go back and let's open up the developer tools and if

02:18.950 --> 02:23.030
I now had the submit button you see submitted you're on the right.

02:23.150 --> 02:26.360
Because indeed the form gets submitted.

02:26.630 --> 02:33.800
Now it would be nice to see the actual values of the form though to see that form object and to see

02:33.800 --> 02:38.790
it we have to go back to our template because where in the template driven approach.

02:38.780 --> 02:45.320
So as a rule of thumb everything you do you do it in the template everything you want to change about

02:45.320 --> 02:48.850
this form you want to add on as functionality.

02:48.860 --> 02:53.000
You do it in a template on this form object.

02:53.000 --> 02:56.120
We want to get access to the form created by angler.

02:56.330 --> 03:01.730
Now you'll learn about local reference that you can place on aged hemol elements to get access to them.

03:02.030 --> 03:10.050
So we could place hash tag on the form element and now we could access this form element on wildy f

03:10.070 --> 03:16.430
reference in our template and we could pass f as an argument to the on Zammit method and print that

03:16.430 --> 03:17.280
there.

03:17.300 --> 03:19.870
So now we know that we get the form.

03:20.000 --> 03:24.470
And actually this will be of Taieb element ref as we learned.

03:24.560 --> 03:29.760
So if we import element ref and make this type element referer and we output the form here.

03:29.990 --> 03:34.440
So this element we now go back to this and hit submit.

03:34.670 --> 03:41.660
Yeah we did see the form object we see some strange Klaas's hearable compact them but that's not what

03:41.660 --> 03:42.540
we want.

03:42.740 --> 03:48.770
It's not a javascript object created by angular But this object a stare we just need to know how to

03:48.770 --> 03:54.980
get to it and there actually is a trick you could call it but but it's no trick it's a default way to

03:54.980 --> 03:58.260
get access to is automatically created object.

03:58.520 --> 04:01.620
You set this local reference equal to something.

04:01.640 --> 04:08.900
Now we haven't done that yet but we cancel it equal to something X-post biters.

04:09.050 --> 04:09.920
For me.

04:09.920 --> 04:17.180
Keep in mind the form element is kind of a selector for a directive built into angler which will create

04:17.180 --> 04:24.290
a javascript object automatically and then it will expose some data we can fetch here on this form element

04:24.590 --> 04:29.140
we can get access to it by writing Engy form here between the quotation marks.

04:29.150 --> 04:32.820
So this might look super strange but what does the index is.

04:33.050 --> 04:39.950
It tells angular hey please give me access to this form you created automatically.

04:39.950 --> 04:42.130
That's just something you have to keep in mind.

04:42.260 --> 04:49.830
This is how you get access to the form to this javascript object created by dangler automatically.

04:49.940 --> 04:56.670
So therefore here where we get is form we now still pass it.

04:56.690 --> 05:01.800
Now this will no longer be a element ref So let's remove this type here instead.

05:01.820 --> 05:05.710
This will now be of energy for him.

05:05.720 --> 05:12.710
So let's import energy form from an angular forms and kind of makes sense that it is of type energy

05:12.840 --> 05:15.950
form because that is what we're accessing here.

05:15.950 --> 05:18.620
This automatically created for him.

05:18.740 --> 05:24.950
Now it's printed to the console one more time and let's actually enter something into these fields to

05:24.950 --> 05:26.900
see that it worked.

05:27.110 --> 05:35.420
If now type submit here you see that now we get the energy form object object which we certainly didn't

05:35.420 --> 05:36.200
create.

05:36.500 --> 05:38.640
And there we have a lot of properties.

05:38.650 --> 05:40.980
We'll have a close look at those later.

05:41.000 --> 05:43.390
We also do have a value property.

05:43.460 --> 05:50.630
And if we expand this we indeed see a couple of key value pairs here where we have the names of the

05:50.630 --> 05:57.970
controls so the names we set up here and the name attribute like user name and email.

05:58.010 --> 05:59.090
We find them here.

05:59.210 --> 06:01.300
And then the values the user entered.

06:01.550 --> 06:07.990
And this is how we can submit such a form and how we can all get access to the Form object to redeploy

06:08.030 --> 06:08.870
angular.

06:08.870 --> 06:13.430
We also see that our set of controls also work.
