WEBVTT

00:02.860 --> 00:09.040
In alast lectures we learn how we can register controls and how we can submit the form and also which

00:09.040 --> 00:11.900
properties this form has now.

00:11.920 --> 00:19.100
Right now we submit the form by passing the form which we get via entry form here to the ONS and method

00:19.360 --> 00:24.320
does absolutely fine and probably the approach you will use in many use cases.

00:24.700 --> 00:28.030
I just want to bring some other approach to your attention.

00:28.330 --> 00:30.400
You don't have to submit it here.

00:30.670 --> 00:37.930
Remember the components section where we learned about at viewed child which allowed us to access a

00:37.930 --> 00:45.020
local reference element controlled or which holds a local reference in our typescript code.

00:45.370 --> 00:48.860
Well in the end we do just have such a local reference here.

00:48.970 --> 00:56.620
And whilst it might not point to elementary math but udy any form object it still has a local reference

00:56.620 --> 01:00.390
in our template so we can all use at you child here.

01:00.700 --> 01:08.020
So I will simply comment out this on submit method here so that we have it in the code you can find

01:08.020 --> 01:15.010
attached to this module and show you an alternative approach in this alternative approach.

01:15.010 --> 01:21.640
I will use at you child days decorator you learn about and component sections so make sure to import

01:21.640 --> 01:23.680
it from an angular core.

01:24.320 --> 01:29.350
And once you get X 2D element which has the local reference math on it.

01:29.350 --> 01:33.760
So I pass f as a string as an argument to child.

01:33.970 --> 01:40.180
And then I could simply stored as a variable name and sign up for any name you like which will be of

01:40.180 --> 01:43.870
type and form of course no one owns a permit.

01:43.960 --> 01:48.580
I could output this sign up for him like this.

01:48.700 --> 01:54.620
And you should see that if I now submit this again we still have this for him.

01:54.660 --> 02:00.120
And I can also enter something so that we can see that this works too if we have a look at the value.

02:00.160 --> 02:05.200
So this gives us access to the very same form without passing a two on submit.

02:05.200 --> 02:11.120
This is especially useful if you need to access the forum not just at the point of time when you submitted

02:11.290 --> 02:12.740
but also earlier.

02:13.000 --> 02:17.320
And it would show a use case for days in a later lecture.

02:17.320 --> 02:22.240
For now let's keep in mind that this is another way of getting access to the form in our typescript

02:22.240 --> 02:28.360
code a perfectly valid way of getting access and before diving deeper into why this might be useful

02:28.360 --> 02:35.120
or when we could use that let's actually understand how we can control the validity of the form.

02:35.140 --> 02:40.900
So to determine whether the form is valid if we entered a valid email address or not because right now

02:40.900 --> 02:45.040
I can submit anything no matter if this is invalid if it is empty.

02:45.130 --> 02:49.940
It would be nice if you could add such validation and take advantage of the tools.

02:50.110 --> 02:56.860
Gives us there to possibly also enhance the user experience by placing a red border around invalid elements

02:57.040 --> 02:58.710
or something like this.

02:58.750 --> 03:01.780
We'll have a look at validation in the next lectures.
